import pygame
import json
from os import getcwd

# Initializing Pygame
pygame.init()

# Creating the sceen
screen = pygame.display.set_mode((800, 600))

# Setting up icon and title
pygame.display.set_caption("Luigi's Mansion")
icon = pygame.image.load(f"{getcwd()}/icon.png")
pygame.display.set_icon(icon)

# Player
player_img = pygame.image.load(f"{getcwd()}/man.png")
player_x = 100
player_y = 100
player_old_x, player_old_y = player_x, player_y
player_x_vel = 0
player_y_vel = 0
GAME_SPEED = 8

blocks = []

# Set up JSON
with open('map.json', 'r+') as f:
    data = json.load(f)
    game_map = data['map']
    for x in range(screen.get_height()):
        x_list = [0 for j in range(screen.get_width())]
        game_map.append(x_list)


def show_player(x, y):
    screen.blit(player_img, (x, y))

def update_player_coors(oldx, oldy, newx, newy):  # Update player coordinates in json file
    deltax = newx - oldx
    x_direction = 'right' if deltax > 0 else 'left'
    deltay = newy - oldy
    y_direction = 'down' if deltay > 0 else 'up'

    if x_direction == 'right':
        for i in range(oldy, oldy + player_img.get_height()):
            for j in range(oldx, newx):
                game_map[i][j] = 0
        for i in range(oldy, oldy + player_img.get_height()):
            for j in range(oldx + player_img.get_width(), newx + player_img.get_width()):
                game_map[i][j] = 2
    else:
        for i in range(oldy, oldy + player_img.get_height()):
            for j in range(newx, oldx):
                game_map[i][j] = 2
        for i in range(oldy, oldy + player_img.get_height()):
            for j in range(newx + player_img.get_width(), oldx + player_img.get_width()):
                game_map[i][j] = 0

    if y_direction == 'down':
        for i in range(oldy, newy):
            for j in range(oldx, oldx + player_img.get_width()):
                game_map[i][j] = 0
        for i in range(oldy + player_img.get_height(), newy + player_img.get_height()):
            for j in range(oldx, oldx + player_img.get_width()):
                game_map[i][j] = 2
    else:
        for i in range(newy, oldy):
            for j in range(oldx, oldx + player_img.get_width()):
                game_map[i][j] = 2
        for i in range(newy + player_img.get_height(), oldy + player_img.get_height()):
            for j in range(oldx, oldx + player_img.get_width()):
                game_map[i][j] = 0



def collide(x, y, width, height):
    # Wall collision
    if x <= 0:
        return True
    if x + width >= screen.get_width():
        return True
    if y <= 0:
        return True
    if y + height >= screen.get_height():
        return True



    # Block collision
    # for block in blocks:
    #     if x + width >= block[0] and x <= block[2]:
    #         if y + height >= block[1] and y <= block[3]:
    #             return True

def create_block(x1, y1, x2, y2):
    global blocks
    new_block = [x1, y1, x2, y2]
    blocks.append(new_block)
    for i in range(y1, y2):
        for j in range(x1, x2):
            game_map[i][j] = 1



def draw_blocks():
    for block in blocks:
        left = block[0]
        top = block[1]
        width = block[2] - left
        height = block[3] - top
        pygame.draw.rect(screen, (89, 78, 77), pygame.Rect(left, top, width, height))


# Game loop

create_block(0, 200, 200, 50)
create_block(0, 200, 0, 50)
create_block(200, 50, 400, 500)
create_block(400, 200, 450, 500)


running = True
while running:
    screen.fill((0, 0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Keybind check
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_a:
                player_x_vel = -GAME_SPEED
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_d:
                player_x_vel = GAME_SPEED
                for line in game_map:
                    print(line)
                print('\n')
            if event.key == pygame.K_w:
                player_y_vel = -GAME_SPEED
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_s:
                player_y_vel = GAME_SPEED
        if event.type == pygame.KEYUP:
            if event.key == pygame.K_a and player_x_vel != GAME_SPEED:
                player_x_vel = 0
            if event.key == pygame.K_d and player_x_vel != -GAME_SPEED:
                player_x_vel = 0
            if event.key == pygame.K_w and player_y_vel != GAME_SPEED:
                player_y_vel = 0
            if event.key == pygame.K_s and player_y_vel != -GAME_SPEED:
                player_y_vel = 0

    if not collide(player_x + player_x_vel, player_y, player_img.get_width(), player_img.get_height()):
        player_x += player_x_vel
    if not collide(player_x, player_y + player_y_vel, player_img.get_width(), player_img.get_height()):
        player_y += player_y_vel

    draw_blocks()
    update_player_coors(player_old_x, player_old_y, player_x, player_y)
    player_old_x, player_old_y = player_x, player_y
    show_player(player_x, player_y)
    pygame.display.update()
    pygame.time.Clock().tick(60)
